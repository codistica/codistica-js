/** @flow */

import {randomizer, stringUtils} from '@codistica/core';
import {createSophistication} from '@codistica/react';
import {default as centered} from '@storybook/addon-centered/react';
import React, {useState, Fragment} from 'react';
import {
    {{#icons}}
        {{componentName}} as {{title}},
    {{/icons}}
} from '../../src/index.js';

const useSophistication = createSophistication({
    root: {
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center'
    },
    icons(data) {
        return {
            margin: '50px 200px',
            textAlign: 'center',
            '& svg': {
                height: 100,
                width: 100
            },
            '& span': {
                width: 100,
                display: 'inline-flex',
                flexDirection: 'column',
                alignItems: 'center',
                margin: 10
            },
            '& p': {
                color: data.textColor
            }
        };
    },
    buttons: {
        position: 'fixed',
        top: '50%',
        left: 0,
        transform: 'translateY(-50%)',
        display: 'flex',
        flexDirection: 'column',
        '& > button': {
            margin: 10
        }
    }
});

const icons = [
    {{#icons}}
        {{title}},
    {{/icons}}
];

/**
 * @description An all icons demo.
 * @returns {Object<string,*>} React component.
 */
function AllIcons() {
    const [iconsColor, setIconsColor] = useState(null);
    const [iconsBackgroundColor, setIconsBackgroundColor] = useState('#ffffff');
    const [textColor, setTextColor] = useState('#ffffff');
    const jssClassNames = useSophistication({textColor});
    return (
        <Fragment>
            <div className={jssClassNames.root}>
                <div className={jssClassNames.icons}>
                    {icons.map((Icon, key) => {
                        const icon = (
                            <Icon
                                color={iconsColor}
                                backgroundColor={iconsBackgroundColor}
                            />
                        );
                        return (
                            <span key={key}>
                                {icon}
                                <p>
                                    {stringUtils.toTitleCase(icon.props.title)}
                                </p>
                            </span>
                        );
                    })}
                </div>

                <div className={jssClassNames.buttons}>
                    <button
                        onClick={() => {
                            setIconsColor(null);
                        }}>
                        {'Default Fill'}
                    </button>
                    <button
                        onClick={() => {
                            setIconsColor('#dededd');
                        }}>
                        {'B/W Fill'}
                    </button>
                    <button
                        onClick={() => {
                            setIconsColor(randomizer.getHEXColor());
                        }}>
                        {'Random Fill'}
                    </button>
                    <button
                        onClick={() => {
                            if (iconsBackgroundColor === '#ffffff') {
                                setIconsBackgroundColor('none');
                            } else {
                                setIconsBackgroundColor('#ffffff');
                            }
                        }}>
                        {'Toggle Icons Background'}
                    </button>
                    <button
                        onClick={() => {
                            if (textColor === '#ffffff') {
                                setTextColor('#000000');
                            } else {
                                setTextColor('#ffffff');
                            }
                        }}>
                        {'Toggle Text Color'}
                    </button>
                </div>
            </div>
        </Fragment>
    );
}

const meta = {
    title: 'Build Icons Output',
    parameters: {
        backgrounds: {
            default: 'Dark'
        }
    },
    decorators: [centered]
};

export {AllIcons};
export default meta;
