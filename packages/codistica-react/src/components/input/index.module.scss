// TODO: PASS ALL COLORS TO SCSS VARIABLES

$color-white: #dedede;
$color-orange: #e88b0e;
$color-green: #94ff36;
$color-red: #e83b35;
$color-yellow: #e8e639;

._main { // FOR COMPONENT MAIN ELEMENT. DO NOT DELETE

}

._scope { // FOR HTML ELEMENT AND ATTRIBUTE SELECTORS. DO NOT DELETE

  // RESET CSS
  *,
  *::before,
  *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: none;
  }

  input {
    background-color: transparent;
    outline: none;
    border-radius: 0;
  }

}

.radioGroupContainer {
  display: flex;
}

.radioWrapper {
  display: flex;
  margin: 5px 10px;
  align-items: center;
}

.radioTitle {
  color: $color-white;
  margin-left: 10px;
}

.typeInput {

  // *** TYPE INPUTS ***

  input {
    display: inline-block;
    border-bottom: 1px solid $color-white;
    color: $color-white;
    padding: 5px 2px;
    transition: border-bottom 0.2s linear;
  }

  // HIDE LABEL
  input + label {
    display: none;
  }

  input:focus {
    border-bottom: 1px solid $color-orange;
  }

  input::placeholder {
    color: $color-white;
    opacity: 0.4;
  }

  // INDICATIVE STYLES
  ._valid {
    border-bottom: 1px solid $color-green!important;
  }

  ._invalid {
    border-bottom: 1px solid $color-red!important;
  }

  ._isHighlight {
    border-bottom: 1px solid $color-white!important;
    color: $color-white!important;
    animation: blink 0.3s linear none 3;
  }

  ._isWarning {
    border-bottom: 1px solid $color-yellow!important;
    color: $color-yellow!important;
    animation: blink 0.3s linear none 3;
  }

}

.nonTypeInput { // TODO: OTHER PROPS TO RESET?

  // *** RADIO AND CHECKBOX INPUTS ***

  // INPUT CONTAINER AND RESET DEFAULT STYLES
  display: inline-block;
  position: relative;
  height: 20px;
  width: 20px;
  margin: 0;
  padding: 0;
  border: none;
  outline: none;
  font-size: 0;

  // POSITION/CENTER ALL ELEMENTS AND RESET DEFAULT STYLES
  *,
  *::before,
  *::after {
    display: inline-block;
    position: absolute;
    height: 100%;
    width: 100%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    margin: 0;
    padding: 0;
    border: none;
    outline: none;
    font-size: 0;
  }

  // HIDE DEFAULT ELEMENTS
  input {
    opacity: 0!important; // VISIBILITY WOULD BREAK FUNCTIONALITY
    z-index: -10!important; // SEND TO BACK
  }

  // HIDE LABEL TEXT
  input + label {
    color: transparent;
  }

  // CREATE NEW OUTER BOX
  input[type="checkbox"] + label::before {
    border: 1px solid rgba(255,255,255,0.7);
    background-color: rgba(255,255,255,0.1);
    transition: border 0.2s linear;
  }

  // CREATE NEW OUTER CIRCLE
  input[type="radio"] + label::before {
    border-radius: 50%;
    border: 1px solid rgba(255,255,255,0.7);
    background-color: rgba(255,255,255,0.1);
    transition: border 0.2s linear;
  }

  // CREATE NEW INNER SQUARE
  input[type="checkbox"] + label::after {
    height: 70%;
    width: 70%;
    background-color: #ffffff;
  }

  // CREATE NEW INNER DOT
  input[type="radio"] + label::after {
    height: 70%;
    width: 70%;
    border-radius: 50%;
    background-color: #ffffff;
  }

  // BRING NEW ELEMENTS TO FRONT
  input + label::before,
  input + label::after {
    z-index: 10;
  }

  // MAKE OUTER BOX/CIRCLE ALWAYS VISIBLE
  input[type="checkbox"] + label::before,
  input[type="radio"] + label::before {
    content: "";
  }

  // MAKE INNER SQUARE/DOT HIDDEN BY DEFAULT
  input[type="checkbox"] + label::after,
  input[type="radio"] + label::after {
    content: none;
  }

  // SHOW INNER SQUARE/DOT IN CHECKED INPUTS
  input[type="checkbox"]:checked + label::after,
  input[type="radio"]:checked + label::after {
    content: "";
  }

  // ADD FOCUS SUPPORT FOR ACCESSIBILITY
  input:focus + label::before {
    border: 1px solid rgba(255,255,255,1);
  }

  // INDICATIVE STYLES
  ._valid:checked + label::before {
    border: 1px solid $color-green!important;
  }

  ._invalid:checked + label::before {
    border: 1px solid $color-red!important;
  }

  ._isHighlight + label,
  ._isWarning + label { // DO NOT INCLUDE INPUT (INPUT OPACITY MUST NOT BE OVERRIDDEN)
    animation: blink 0.3s linear none 3;
  }

  ._isHighlight + label::before,
  ._isHighlight:checked + label::before {
    border: 1px solid $color-white!important;
  }

  ._isHighlight:checked + label::after {
    background-color: $color-white!important;
  }

  ._isWarning + label::before,
  ._isWarning:checked + label::before{
    border: 1px solid $color-yellow!important;
  }

  ._isWarning:checked + label::after {
    background-color: $color-yellow!important;
  }

}

/* BLINK ANIMATION */
@keyframes blink {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}
